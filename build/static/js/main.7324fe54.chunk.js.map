{"version":3,"sources":["component/ListTodo.js","component/ListComplete.js","pages/BoxTodo.js","App.js","index.js"],"names":["useStyle","makeStyles","root","width","margin","display","flexDirection","cursor","transition","background","transform","boxShadow","content","justifyContent","alignItems","overflow","ListTodo","asset","active","classes","Paper","spacing","className","Typography","style","align","children","date","checked","isCompleted","onClick","id","todo","InputBase","defaultValue","backgroundColor","opacity","ListComplete","delCompleted","IconButton","lighterBox","color","padding","minHeight","darkBox","container","success","border","BoxTodo","React","useState","task","setTask","taskComplete","setTaskCompleted","taskInput","setTaskinput","setChecked","changeTheme","setChangeTheme","setDate","complete","setComplete","setSuccess","theme","setTheme","addList","useCallback","length","pre","delTodo","console","log","map","value","splice","indexOf","checkComplete","forEach","Grid","item","Box","position","compornent","variant","placeholder","inputProps","onChange","e","target","ButtonGroup","type","btn","disabled","Fade","in","top","right","noValidate","TextField","label","onMouseLeave","InputLabelProps","shrink","alignI","FormControlLabel","control","Checkbox","name","Snackbar","open","autoHideDuration","onClose","Alert","severity","anchorOrigin","vertical","horizontal","Button","startIcon","size","App","mt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7324fe54.chunk.js","sourcesContent":["import { Paper, Typography, makeStyles, InputBase } from \"@material-ui/core\";\r\nimport CheckBox from \"@material-ui/core/Checkbox\";\r\nimport React from 'react';\r\nconst useStyle = makeStyles({\r\n    root:{\r\n        width:'100%',\r\n        margin:'5px 0',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        cursor:'pointer',\r\n        transition:'.3s ease',\r\n        '&:hover':{\r\n            background:'rgba(253, 114, 114,0.2)',\r\n            transform:'translateY(-4%)',\r\n            boxShadow: 'rgba(0, 0, 0, 0.3) 0px 0px 0px, rgba(0, 0, 0, 0.22) 0px 5px 5px'\r\n        }\r\n    },\r\n    content:{\r\n        width:'100%',\r\n        margin:'5px 0',\r\n        display:'flex',\r\n        justifyContent:'start',\r\n        alignItems:'center',\r\n        overflow:'hidden'\r\n    }\r\n})\r\n\r\n\r\nexport default function ListTodo({asset, active}){\r\n    const classes = useStyle();\r\n\r\n    //-------function-----------//\r\n    \r\n    return(\r\n        <Paper spacing={2} className={classes.root}  >\r\n            <Typography style={{width:'100%'}} align='center'   children={<div>{asset.date}</div>} />\r\n            <div className={classes.content}>\r\n            <CheckBox\r\n                checked={asset.isCompleted}\r\n                onClick={()=> active(asset.id, asset.todo, asset.isCompleted, asset.date)}\r\n            />\r\n            <InputBase defaultValue={asset.todo} style={{width:'80%'}} />            \r\n            </div>            \r\n        </Paper>\r\n    )\r\n}","import { Paper, Typography, makeStyles, IconButton} from \"@material-ui/core\";\r\nimport CheckBox from \"@material-ui/core/Checkbox\";\r\nimport React from 'react'\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nconst useStyle = makeStyles({\r\n    root:{\r\n        width:'100%',\r\n        margin:'5px 0',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        cursor:'pointer',\r\n        backgroundColor: '#747d8c',\r\n        opacity:0.4\r\n    },\r\n    content:{\r\n        width:'100%',\r\n        margin:'5px 0',\r\n        display:'flex',\r\n        justifyContent:'start',\r\n        alignItems:'center',\r\n        overflow:'hidden'\r\n    }\r\n})\r\n\r\n\r\nexport default function ListComplete({asset, active, delCompleted}){\r\n    const classes = useStyle();\r\n\r\n    //-------function-----------//\r\n    \r\n    return(\r\n        <Paper spacing={2} className={classes.root} >\r\n            <Typography style={{width:'100%'}} align='center'   children={<div>{asset.date}</div>} />\r\n            <div className={classes.content}>\r\n            <CheckBox\r\n                checked={asset.isCompleted}\r\n                onClick={()=> active(asset.id, asset.todo, asset.isCompleted, asset.date)}\r\n            />\r\n            <Typography style={{width:'80%'}} align='left'  children={<span>{asset.todo}</span>} />\r\n            <IconButton onClick={()=>{\r\n                delCompleted(asset.id);\r\n            }}\r\n            >\r\n                <DeleteOutlineIcon />\r\n            </IconButton>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}","import { Grid, Box, Typography, Paper, InputBase, IconButton,Checkbox, makeStyles, ButtonGroup,TextField, Fade, FormControlLabel, Button, Snackbar, FormLabel } from \"@material-ui/core\"\r\nimport CardTravelIcon from '@material-ui/icons/CardTravel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport ListTodo from '../component/ListTodo';\r\nimport ListComplete from '../component/ListComplete';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport React from 'react'\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport { Alert } from \"@material-ui/lab\";\r\nconst useStyle= makeStyles({\r\n    lighterBox:{\r\n        '& > *':{\r\n            margin:'5px 20px',\r\n            \r\n            color:'white'\r\n        },\r\n        padding:'10px',\r\n        background:'black',\r\n        minHeight:'500px'\r\n    },\r\n    darkBox:{\r\n        padding:'10px',\r\n        '& > *':{\r\n            margin:'5px 20px',\r\n        },\r\n    },\r\n    root:{\r\n        width:'400px',\r\n        padding: '5px',\r\n        display:'flex',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        boxShadow: 'rgba(252, 66, 123,0.5) 0px 0px 0px 3px'\r\n    },\r\n    container:{\r\n        backgroundColor: '#f1f2f6'\r\n    },\r\n    success:{\r\n        backgroundColor:'green',\r\n        padding:10,\r\n        border:'1px solid black'\r\n    }\r\n    \r\n})\r\nexport default function BoxTodo(){\r\n    const classes = useStyle();\r\n\r\n    //--------useState--------//\r\n    const [task, setTask] = React.useState([]);\r\n    const [taskComplete, setTaskCompleted] = React.useState([]);\r\n    const [taskInput, setTaskinput] = React.useState('');\r\n    const [checked, setChecked] = React.useState(false);\r\n    const [changeTheme, setChangeTheme] = React.useState(false);\r\n    const [date, setDate]= React.useState(\"\");\r\n    const [complete, setComplete] = React.useState(true);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [theme, setTheme] = React.useState(classes.darkBox);\r\n    //--------Function-------//\r\n    const toggleTheme = ()=>{\r\n        setChangeTheme(pre => !pre);\r\n        if(theme === classes.lighterBox ){\r\n            return setTheme(pre => classes.darkBox)\r\n        }else{\r\n            return setTheme(pre => classes.lighterBox)\r\n        }\r\n    }\r\n    const addList = React.useCallback(\r\n        ()=>{\r\n            setTask([ {id:task.length +1, todo:taskInput,date: date ,isCompleted:false},...task]);\r\n            setTaskinput(\"\");\r\n            setDate('');\r\n            setSuccess((pre)=>true);\r\n        },\r\n        [task, taskInput, date],\r\n    )\r\n\r\n    const delTodo = (id)=>{\r\n        console.log('function',id);\r\n        taskComplete.map(value=>{\r\n            if(value.id == id){\r\n                taskComplete.splice(taskComplete.indexOf(value),1);\r\n                return setTaskCompleted([...taskComplete]);       \r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    const checkComplete = (id,todo, isCompleted, date) => {\r\n        if(isCompleted){\r\n            taskComplete.forEach(value => {\r\n                if(value.id == id){\r\n                    taskComplete.splice(taskComplete.indexOf(value),1);\r\n                    setTask([...task,{id: task.length+ 1, todo: todo, date:date  ,isCompleted:false }])\r\n                }\r\n            })\r\n        }else{\r\n            task.forEach(value=>{\r\n                if(value.id == id){\r\n                    task.splice(task.indexOf(value),1);\r\n                    setTaskCompleted([...taskComplete,{id:taskComplete.length+1, todo: todo,date: date, isCompleted:true}])\r\n                }\r\n            })\r\n        }\r\n    }\r\n    //----------Render--------//\r\n    return(\r\n        <Grid item>\r\n            \r\n            <Box position='relative' className={theme}>\r\n                <Typography color='secondary' align='center'  compornent='h1' variant='h5' children={<span><CardTravelIcon/> Todo List</span>}/>\r\n                <Paper className={classes.root}>\r\n                    <InputBase\r\n                        placeholder='Danh sách việc cần làm'                        \r\n                        style={{width:'90%'}}\r\n                        defaultValue=\"2017-05-24T10:30\"\r\n                        inputProps={{ 'aria-label': 'todo list' }}\r\n                        value={taskInput}                 \r\n                        onChange={(e) => setTaskinput(e.target.value)}      \r\n                    />\r\n                    <ButtonGroup type='time' className={classes.btn}>\r\n                        <IconButton color='secondary'  onClick={()=> setChecked(pre => !pre)}>\r\n                            <EventIcon />\r\n                        </IconButton>\r\n                        <IconButton color='secondary'   onClick={addList} disabled={!taskInput}>\r\n                            <SaveIcon/>\r\n                        </IconButton>                        \r\n                    </ButtonGroup>\r\n                    <Fade in={checked}>\r\n                        <Box \r\n                            position='absolute'\r\n                            top='100px'\r\n                            right='70px'\r\n                        >\r\n                            <form className={classes.container} noValidate>\r\n                                <TextField\r\n                                    id=\"datetime-local\"\r\n                                    label=\"Next appointment\"\r\n                                    type=\"datetime-local\"\r\n                                    value={date}                                    \r\n                                    onMouseLeave={() => setChecked(false)}                               \r\n                                    InputLabelProps={{\r\n                                        shrink: true,                                       \r\n                                    }}                                    \r\n                                    onChange={e => setDate(e.target.value)}\r\n                                />\r\n                            </form>\r\n                        </Box>\r\n                    </Fade>\r\n                </Paper>\r\n                <Box display='flex' justifyContent='end' alignI>\r\n                    <FormControlLabel\r\n                        control={<Checkbox color='primary' checked={changeTheme} onChange={()=> toggleTheme()} name=\"checkedA\" />}\r\n                        label=\"Nền tối\"\r\n                    />\r\n                   \r\n                </Box>\r\n                {/*-------success----------------*/}\r\n                <Snackbar open={success} autoHideDuration={2000} onClose={()=> setSuccess(false)}  >\r\n                    <Alert severity='success' anchorOrigin={{vertical:'center', horizontal:'left',}}>\r\n                        Đã thêm\r\n                    </Alert>\r\n                </Snackbar>\r\n                \r\n\r\n                <Box>\r\n                    {task.map(e =>( \r\n                        <Paper >\r\n                            <ListTodo asset={e} key={e.id} active={checkComplete}/>\r\n                        </Paper>\r\n                    ))}\r\n                </Box>\r\n\r\n                <Button\r\n                    startIcon={<DoneAllIcon/>}\r\n                    variant='outlined'\r\n                    size='small'\r\n                    onClick={()=> setComplete(pre => !pre)}\r\n                    color='primary'\r\n                >\r\n                    {`${taskComplete.length} hoàn thành`}\r\n                </Button>\r\n                <Fade in={complete}>\r\n                    <Box>\r\n                        {taskComplete.map(e => (\r\n                            <Paper >\r\n                                <ListComplete asset={e} key={e.id} active={checkComplete} delCompleted={delTodo}/>\r\n                            </Paper>\r\n                        ))}\r\n                    </Box>\r\n                </Fade>\r\n            </Box>\r\n        </Grid>\r\n    )\r\n}","import { Box } from '@material-ui/core'\nimport BoxTodo from './pages/BoxTodo'\nfunction App() {\n  return (\n    <Box container display='flex' justifyContent='center' mt={5} >\n      <BoxTodo/>\n    </Box>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}