{"ast":null,"code":"import _toConsumableArray from\"E:/Qu\\u1EA3n l\\xED \\u1EE9ng d\\u1EE5ng/Project for CV/apptodo/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"E:/Qu\\u1EA3n l\\xED \\u1EE9ng d\\u1EE5ng/Project for CV/apptodo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Grid,Box,Typography,Paper,InputBase,IconButton,Checkbox,makeStyles,ButtonGroup,TextField,Fade,FormControlLabel,Button,Snackbar,FormLabel}from\"@material-ui/core\";import CardTravelIcon from'@material-ui/icons/CardTravel';import SaveIcon from'@material-ui/icons/Save';import ListTodo from'../component/ListTodo';import ListComplete from'../component/ListComplete';import EventIcon from'@material-ui/icons/Event';import React from'react';import DoneAllIcon from'@material-ui/icons/DoneAll';import{Alert}from\"@material-ui/lab\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyle=makeStyles({lighterBox:{'& > *':{margin:'5px 20px',color:'white'},padding:'10px',background:'black',minHeight:'500px'},darkBox:{padding:'10px','& > *':{margin:'5px 20px'}},root:{width:'400px',padding:'5px',display:'flex',alignItems:'center',justifyContent:'center',boxShadow:'rgba(252, 66, 123,0.5) 0px 0px 0px 3px'},container:{backgroundColor:'#f1f2f6'},success:{backgroundColor:'green',padding:10,border:'1px solid black'}});export default function BoxTodo(){var classes=useStyle();//--------useState--------//\nvar _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),task=_React$useState2[0],setTask=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),taskComplete=_React$useState4[0],setTaskCompleted=_React$useState4[1];var _React$useState5=React.useState(''),_React$useState6=_slicedToArray(_React$useState5,2),taskInput=_React$useState6[0],setTaskinput=_React$useState6[1];var _React$useState7=React.useState(false),_React$useState8=_slicedToArray(_React$useState7,2),checked=_React$useState8[0],setChecked=_React$useState8[1];var _React$useState9=React.useState(false),_React$useState10=_slicedToArray(_React$useState9,2),changeTheme=_React$useState10[0],setChangeTheme=_React$useState10[1];var _React$useState11=React.useState(\"\"),_React$useState12=_slicedToArray(_React$useState11,2),date=_React$useState12[0],setDate=_React$useState12[1];var _React$useState13=React.useState(true),_React$useState14=_slicedToArray(_React$useState13,2),complete=_React$useState14[0],setComplete=_React$useState14[1];var _React$useState15=React.useState(false),_React$useState16=_slicedToArray(_React$useState15,2),success=_React$useState16[0],setSuccess=_React$useState16[1];var _React$useState17=React.useState(classes.darkBox),_React$useState18=_slicedToArray(_React$useState17,2),theme=_React$useState18[0],setTheme=_React$useState18[1];//--------Function-------//\nvar toggleTheme=function toggleTheme(){setChangeTheme(function(pre){return!pre;});if(theme===classes.lighterBox){return setTheme(function(pre){return classes.darkBox;});}else{return setTheme(function(pre){return classes.lighterBox;});}};var addList=React.useCallback(function(){setTask([{id:task.length+1,todo:taskInput,date:date,isCompleted:false}].concat(_toConsumableArray(task)));setTaskinput(\"\");setDate('');setSuccess(function(pre){return true;});},[task,taskInput,date]);var delTodo=function delTodo(id){console.log('function',id);taskComplete.map(function(value){if(value.id==id){taskComplete.splice(taskComplete.indexOf(value),1);return setTaskCompleted(_toConsumableArray(taskComplete));}});};var checkComplete=function checkComplete(id,todo,isCompleted,date){if(isCompleted){taskComplete.forEach(function(value){if(value.id==id){taskComplete.splice(taskComplete.indexOf(value),1);setTask([].concat(_toConsumableArray(task),[{id:task.length+1,todo:todo,date:date,isCompleted:false}]));}});}else{task.forEach(function(value){if(value.id==id){task.splice(task.indexOf(value),1);setTaskCompleted([].concat(_toConsumableArray(taskComplete),[{id:taskComplete.length+1,todo:todo,date:date,isCompleted:true}]));}});}};//----------Render--------//\nreturn/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(Box,{position:\"relative\",className:theme,children:[/*#__PURE__*/_jsx(Typography,{color:\"secondary\",align:\"center\",compornent:\"h1\",variant:\"h5\",children:/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(CardTravelIcon,{}),\" Todo List\"]})}),/*#__PURE__*/_jsxs(Paper,{className:classes.root,children:[/*#__PURE__*/_jsx(InputBase,{placeholder:\"Danh s\\xE1ch vi\\u1EC7c c\\u1EA7n l\\xE0m\",style:{width:'90%'},defaultValue:\"2017-05-24T10:30\",inputProps:{'aria-label':'todo list'},value:taskInput,onChange:function onChange(e){return setTaskinput(e.target.value);}}),/*#__PURE__*/_jsxs(ButtonGroup,{type:\"time\",className:classes.btn,children:[/*#__PURE__*/_jsx(IconButton,{color:\"secondary\",onClick:function onClick(){return setChecked(function(pre){return!pre;});},children:/*#__PURE__*/_jsx(EventIcon,{})}),/*#__PURE__*/_jsx(IconButton,{color:\"secondary\",onClick:addList,disabled:!taskInput,children:/*#__PURE__*/_jsx(SaveIcon,{})})]}),/*#__PURE__*/_jsx(Fade,{in:checked,children:/*#__PURE__*/_jsx(Box,{position:\"absolute\",top:\"100px\",right:\"70px\",children:/*#__PURE__*/_jsx(\"form\",{className:classes.container,noValidate:true,children:/*#__PURE__*/_jsx(TextField,{id:\"datetime-local\",label:\"Next appointment\",type:\"datetime-local\",value:date,onMouseLeave:function onMouseLeave(){return setChecked(false);},InputLabelProps:{shrink:true},onChange:function onChange(e){return setDate(e.target.value);}})})})})]}),/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"end\",alignI:true,children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{color:\"primary\",checked:changeTheme,onChange:function onChange(){return toggleTheme();},name:\"checkedA\"}),label:\"N\\u1EC1n t\\u1ED1i\"})}),/*#__PURE__*/_jsx(Snackbar,{open:success,autoHideDuration:2000,onClose:function onClose(){return setSuccess(false);},children:/*#__PURE__*/_jsx(Alert,{severity:\"success\",anchorOrigin:{vertical:'center',horizontal:'left'},children:\"\\u0110\\xE3 th\\xEAm\"})}),/*#__PURE__*/_jsx(Box,{children:task.map(function(e){return/*#__PURE__*/_jsx(Paper,{children:/*#__PURE__*/_jsx(ListTodo,{asset:e,active:checkComplete},e.id)});})}),/*#__PURE__*/_jsx(Button,{startIcon:/*#__PURE__*/_jsx(DoneAllIcon,{}),variant:\"outlined\",size:\"small\",onClick:function onClick(){return setComplete(function(pre){return!pre;});},color:\"primary\",children:\"\".concat(taskComplete.length,\" ho\\xE0n th\\xE0nh\")}),/*#__PURE__*/_jsx(Fade,{in:complete,children:/*#__PURE__*/_jsx(Box,{children:taskComplete.map(function(e){return/*#__PURE__*/_jsx(Paper,{children:/*#__PURE__*/_jsx(ListComplete,{asset:e,active:checkComplete,delCompleted:delTodo},e.id)});})})})]})});}","map":{"version":3,"sources":["E:/Quản lí ứng dụng/Project for CV/apptodo/src/pages/BoxTodo.js"],"names":["Grid","Box","Typography","Paper","InputBase","IconButton","Checkbox","makeStyles","ButtonGroup","TextField","Fade","FormControlLabel","Button","Snackbar","FormLabel","CardTravelIcon","SaveIcon","ListTodo","ListComplete","EventIcon","React","DoneAllIcon","Alert","useStyle","lighterBox","margin","color","padding","background","minHeight","darkBox","root","width","display","alignItems","justifyContent","boxShadow","container","backgroundColor","success","border","BoxTodo","classes","useState","task","setTask","taskComplete","setTaskCompleted","taskInput","setTaskinput","checked","setChecked","changeTheme","setChangeTheme","date","setDate","complete","setComplete","setSuccess","theme","setTheme","toggleTheme","pre","addList","useCallback","id","length","todo","isCompleted","delTodo","console","log","map","value","splice","indexOf","checkComplete","forEach","e","target","btn","shrink","vertical","horizontal"],"mappings":"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","sourcesContent":["import { Grid, Box, Typography, Paper, InputBase, IconButton,Checkbox, makeStyles, ButtonGroup,TextField, Fade, FormControlLabel, Button, Snackbar, FormLabel } from \"@material-ui/core\"\r\nimport CardTravelIcon from '@material-ui/icons/CardTravel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport ListTodo from '../component/ListTodo';\r\nimport ListComplete from '../component/ListComplete';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport React from 'react'\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport { Alert } from \"@material-ui/lab\";\r\nconst useStyle= makeStyles({\r\n    lighterBox:{\r\n        '& > *':{\r\n            margin:'5px 20px',\r\n            \r\n            color:'white'\r\n        },\r\n        padding:'10px',\r\n        background:'black',\r\n        minHeight:'500px'\r\n    },\r\n    darkBox:{\r\n        padding:'10px',\r\n        '& > *':{\r\n            margin:'5px 20px',\r\n        },\r\n    },\r\n    root:{\r\n        width:'400px',\r\n        padding: '5px',\r\n        display:'flex',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        boxShadow: 'rgba(252, 66, 123,0.5) 0px 0px 0px 3px'\r\n    },\r\n    container:{\r\n        backgroundColor: '#f1f2f6'\r\n    },\r\n    success:{\r\n        backgroundColor:'green',\r\n        padding:10,\r\n        border:'1px solid black'\r\n    }\r\n    \r\n})\r\nexport default function BoxTodo(){\r\n    const classes = useStyle();\r\n\r\n    //--------useState--------//\r\n    const [task, setTask] = React.useState([]);\r\n    const [taskComplete, setTaskCompleted] = React.useState([]);\r\n    const [taskInput, setTaskinput] = React.useState('');\r\n    const [checked, setChecked] = React.useState(false);\r\n    const [changeTheme, setChangeTheme] = React.useState(false);\r\n    const [date, setDate]= React.useState(\"\");\r\n    const [complete, setComplete] = React.useState(true);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [theme, setTheme] = React.useState(classes.darkBox);\r\n    //--------Function-------//\r\n    const toggleTheme = ()=>{\r\n        setChangeTheme(pre => !pre);\r\n        if(theme === classes.lighterBox ){\r\n            return setTheme(pre => classes.darkBox)\r\n        }else{\r\n            return setTheme(pre => classes.lighterBox)\r\n        }\r\n    }\r\n    const addList = React.useCallback(\r\n        ()=>{\r\n            setTask([ {id:task.length +1, todo:taskInput,date: date ,isCompleted:false},...task]);\r\n            setTaskinput(\"\");\r\n            setDate('');\r\n            setSuccess((pre)=>true);\r\n        },\r\n        [task, taskInput, date],\r\n    )\r\n\r\n    const delTodo = (id)=>{\r\n        console.log('function',id);\r\n        taskComplete.map(value=>{\r\n            if(value.id == id){\r\n                taskComplete.splice(taskComplete.indexOf(value),1);\r\n                return setTaskCompleted([...taskComplete]);       \r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    const checkComplete = (id,todo, isCompleted, date) => {\r\n        if(isCompleted){\r\n            taskComplete.forEach(value => {\r\n                if(value.id == id){\r\n                    taskComplete.splice(taskComplete.indexOf(value),1);\r\n                    setTask([...task,{id: task.length+ 1, todo: todo, date:date  ,isCompleted:false }])\r\n                }\r\n            })\r\n        }else{\r\n            task.forEach(value=>{\r\n                if(value.id == id){\r\n                    task.splice(task.indexOf(value),1);\r\n                    setTaskCompleted([...taskComplete,{id:taskComplete.length+1, todo: todo,date: date, isCompleted:true}])\r\n                }\r\n            })\r\n        }\r\n    }\r\n    //----------Render--------//\r\n    return(\r\n        <Grid item>\r\n            \r\n            <Box position='relative' className={theme}>\r\n                <Typography color='secondary' align='center'  compornent='h1' variant='h5' children={<span><CardTravelIcon/> Todo List</span>}/>\r\n                <Paper className={classes.root}>\r\n                    <InputBase\r\n                        placeholder='Danh sách việc cần làm'                        \r\n                        style={{width:'90%'}}\r\n                        defaultValue=\"2017-05-24T10:30\"\r\n                        inputProps={{ 'aria-label': 'todo list' }}\r\n                        value={taskInput}                 \r\n                        onChange={(e) => setTaskinput(e.target.value)}      \r\n                    />\r\n                    <ButtonGroup type='time' className={classes.btn}>\r\n                        <IconButton color='secondary'  onClick={()=> setChecked(pre => !pre)}>\r\n                            <EventIcon />\r\n                        </IconButton>\r\n                        <IconButton color='secondary'   onClick={addList} disabled={!taskInput}>\r\n                            <SaveIcon/>\r\n                        </IconButton>                        \r\n                    </ButtonGroup>\r\n                    <Fade in={checked}>\r\n                        <Box \r\n                            position='absolute'\r\n                            top='100px'\r\n                            right='70px'\r\n                        >\r\n                            <form className={classes.container} noValidate>\r\n                                <TextField\r\n                                    id=\"datetime-local\"\r\n                                    label=\"Next appointment\"\r\n                                    type=\"datetime-local\"\r\n                                    value={date}                                    \r\n                                    onMouseLeave={() => setChecked(false)}                               \r\n                                    InputLabelProps={{\r\n                                        shrink: true,                                       \r\n                                    }}                                    \r\n                                    onChange={e => setDate(e.target.value)}\r\n                                />\r\n                            </form>\r\n                        </Box>\r\n                    </Fade>\r\n                </Paper>\r\n                <Box display='flex' justifyContent='end' alignI>\r\n                    <FormControlLabel\r\n                        control={<Checkbox color='primary' checked={changeTheme} onChange={()=> toggleTheme()} name=\"checkedA\" />}\r\n                        label=\"Nền tối\"\r\n                    />\r\n                   \r\n                </Box>\r\n                {/*-------success----------------*/}\r\n                <Snackbar open={success} autoHideDuration={2000} onClose={()=> setSuccess(false)}  >\r\n                    <Alert severity='success' anchorOrigin={{vertical:'center', horizontal:'left',}}>\r\n                        Đã thêm\r\n                    </Alert>\r\n                </Snackbar>\r\n                \r\n\r\n                <Box>\r\n                    {task.map(e =>( \r\n                        <Paper >\r\n                            <ListTodo asset={e} key={e.id} active={checkComplete}/>\r\n                        </Paper>\r\n                    ))}\r\n                </Box>\r\n\r\n                <Button\r\n                    startIcon={<DoneAllIcon/>}\r\n                    variant='outlined'\r\n                    size='small'\r\n                    onClick={()=> setComplete(pre => !pre)}\r\n                    color='primary'\r\n                >\r\n                    {`${taskComplete.length} hoàn thành`}\r\n                </Button>\r\n                <Fade in={complete}>\r\n                    <Box>\r\n                        {taskComplete.map(e => (\r\n                            <Paper >\r\n                                <ListComplete asset={e} key={e.id} active={checkComplete} delCompleted={delTodo}/>\r\n                            </Paper>\r\n                        ))}\r\n                    </Box>\r\n                </Fade>\r\n            </Box>\r\n        </Grid>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}