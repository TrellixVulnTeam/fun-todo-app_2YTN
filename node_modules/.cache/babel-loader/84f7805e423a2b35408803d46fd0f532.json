{"ast":null,"code":"var _jsxFileName = \"/home/hoa/Desktop/fun-todo-app/src/pages/BoxTodo.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, Box, Typography, Paper, InputBase, IconButton, Checkbox, makeStyles, ButtonGroup, TextField, Fade, FormControlLabel, Button, Snackbar, FormLabel } from \"@material-ui/core\";\nimport CardTravelIcon from '@material-ui/icons/CardTravel';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ListTodo from '../component/ListTodo';\nimport ListComplete from '../component/ListComplete';\nimport EventIcon from '@material-ui/icons/Event';\nimport React from 'react';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport { Alert } from \"@material-ui/lab\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles({\n  lighterBox: {\n    '& > *': {\n      margin: '5px 20px',\n      color: 'white'\n    },\n    padding: '10px',\n    background: 'black',\n    minHeight: '500px'\n  },\n  darkBox: {\n    padding: '10px',\n    '& > *': {\n      margin: '5px 20px'\n    }\n  },\n  root: {\n    width: '400px',\n    padding: '5px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    boxShadow: 'rgba(252, 66, 123,0.5) 0px 0px 0px 3px'\n  },\n  container: {\n    backgroundColor: '#f1f2f6'\n  },\n  success: {\n    backgroundColor: 'green',\n    padding: 10,\n    border: '1px solid black'\n  }\n});\nexport default function BoxTodo() {\n  _s();\n\n  const classes = useStyle(); //--------useState--------//\n\n  const [task, setTask] = React.useState([]);\n  const [taskComplete, setTaskCompleted] = React.useState([]);\n  const [taskInput, setTaskinput] = React.useState('');\n  const [checked, setChecked] = React.useState(false);\n  const [changeTheme, setChangeTheme] = React.useState(false);\n  const [date, setDate] = React.useState(\"\");\n  const [complete, setComplete] = React.useState(true);\n  const [success, setSuccess] = React.useState(false);\n  const [theme, setTheme] = React.useState(classes.darkBox); //--------Function-------//\n\n  const toggleTheme = () => {\n    setChangeTheme(pre => !pre);\n\n    if (theme === classes.lighterBox) {\n      return setTheme(pre => classes.darkBox);\n    } else {\n      return setTheme(pre => classes.lighterBox);\n    }\n  };\n\n  const addList = React.useCallback(() => {\n    setTask([{\n      id: task.length + 1,\n      todo: taskInput,\n      date: date,\n      isCompleted: false\n    }, ...task]);\n    setTaskinput(\"\");\n    setDate('');\n    setSuccess(pre => true);\n  }, [task, taskInput, date]);\n\n  const delTodo = id => {\n    console.log('function', id);\n    taskComplete.map(value => {\n      if (value.id == id) {\n        taskComplete.splice(taskComplete.indexOf(value), 1);\n        return setTaskCompleted([...taskComplete]);\n      }\n    });\n  };\n\n  const checkComplete = (id, todo, isCompleted, date) => {\n    if (isCompleted) {\n      taskComplete.forEach(value => {\n        if (value.id == id) {\n          taskComplete.splice(taskComplete.indexOf(value), 1);\n          setTask([...task, {\n            id: task.length + 1,\n            todo: todo,\n            date: date,\n            isCompleted: false\n          }]);\n        }\n      });\n    } else {\n      task.forEach(value => {\n        if (value.id == id) {\n          task.splice(task.indexOf(value), 1);\n          setTaskCompleted([...taskComplete, {\n            id: taskComplete.length + 1,\n            todo: todo,\n            date: date,\n            isCompleted: true\n          }]);\n        }\n      });\n    }\n  }; //----------Render--------//\n\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      position: \"relative\",\n      className: theme,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"secondary\",\n        align: \"center\",\n        compornent: \"h1\",\n        variant: \"h5\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(CardTravelIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 108\n          }, this), \" Todo List\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 102\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(InputBase, {\n          placeholder: \"Danh s\\xE1ch vi\\u1EC7c c\\u1EA7n l\\xE0m\",\n          style: {\n            width: '90%'\n          },\n          defaultValue: \"2017-05-24T10:30\",\n          inputProps: {\n            'aria-label': 'todo list'\n          },\n          value: taskInput,\n          onChange: e => setTaskinput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          type: \"time\",\n          className: classes.btn,\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"secondary\",\n            onClick: () => setChecked(pre => !pre),\n            children: /*#__PURE__*/_jsxDEV(EventIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"secondary\",\n            onClick: addList,\n            disabled: !taskInput,\n            children: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Fade, {\n          in: checked,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            position: \"absolute\",\n            top: \"100px\",\n            right: \"70px\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: classes.container,\n              noValidate: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"datetime-local\",\n                label: \"Next appointment\",\n                type: \"datetime-local\",\n                value: date,\n                onMouseLeave: () => setChecked(false),\n                InputLabelProps: {\n                  shrink: true\n                },\n                onChange: e => setDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"end\",\n        alignI: true,\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            color: \"primary\",\n            checked: changeTheme,\n            onChange: () => toggleTheme(),\n            name: \"checkedA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 34\n          }, this),\n          label: \"N\\u1EC1n t\\u1ED1i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: success,\n        autoHideDuration: 2000,\n        onClose: () => setSuccess(false),\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          anchorOrigin: {\n            vertical: 'center',\n            horizontal: 'left'\n          },\n          children: \"\\u0110\\xE3 th\\xEAm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: task.map(e => /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(ListTodo, {\n            asset: e,\n            active: checkComplete\n          }, e.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(DoneAllIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 32\n        }, this),\n        variant: \"outlined\",\n        size: \"small\",\n        onClick: () => setComplete(pre => !pre),\n        color: \"primary\",\n        children: `${taskComplete.length} hoàn thành`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Fade, {\n        in: complete,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: taskComplete.map(e => /*#__PURE__*/_jsxDEV(Paper, {\n            children: /*#__PURE__*/_jsxDEV(ListComplete, {\n              asset: e,\n              active: checkComplete,\n              delCompleted: delTodo\n            }, e.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BoxTodo, \"NHV/oZKvU99xG7c9fI1GQL/XhCU=\", false, function () {\n  return [useStyle];\n});\n\n_c = BoxTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoxTodo\");","map":{"version":3,"sources":["/home/hoa/Desktop/fun-todo-app/src/pages/BoxTodo.js"],"names":["Grid","Box","Typography","Paper","InputBase","IconButton","Checkbox","makeStyles","ButtonGroup","TextField","Fade","FormControlLabel","Button","Snackbar","FormLabel","CardTravelIcon","SaveIcon","ListTodo","ListComplete","EventIcon","React","DoneAllIcon","Alert","useStyle","lighterBox","margin","color","padding","background","minHeight","darkBox","root","width","display","alignItems","justifyContent","boxShadow","container","backgroundColor","success","border","BoxTodo","classes","task","setTask","useState","taskComplete","setTaskCompleted","taskInput","setTaskinput","checked","setChecked","changeTheme","setChangeTheme","date","setDate","complete","setComplete","setSuccess","theme","setTheme","toggleTheme","pre","addList","useCallback","id","length","todo","isCompleted","delTodo","console","log","map","value","splice","indexOf","checkComplete","forEach","e","target","btn","shrink","vertical","horizontal"],"mappings":"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","sourcesContent":["import { Grid, Box, Typography, Paper, InputBase, IconButton,Checkbox, makeStyles, ButtonGroup,TextField, Fade, FormControlLabel, Button, Snackbar, FormLabel } from \"@material-ui/core\"\nimport CardTravelIcon from '@material-ui/icons/CardTravel';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ListTodo from '../component/ListTodo';\nimport ListComplete from '../component/ListComplete';\nimport EventIcon from '@material-ui/icons/Event';\nimport React from 'react'\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport { Alert } from \"@material-ui/lab\";\nconst useStyle= makeStyles({\n    lighterBox:{\n        '& > *':{\n            margin:'5px 20px',\n            \n            color:'white'\n        },\n        padding:'10px',\n        background:'black',\n        minHeight:'500px'\n    },\n    darkBox:{\n        padding:'10px',\n        '& > *':{\n            margin:'5px 20px',\n        },\n    },\n    root:{\n        width:'400px',\n        padding: '5px',\n        display:'flex',\n        alignItems:'center',\n        justifyContent:'center',\n        boxShadow: 'rgba(252, 66, 123,0.5) 0px 0px 0px 3px'\n    },\n    container:{\n        backgroundColor: '#f1f2f6'\n    },\n    success:{\n        backgroundColor:'green',\n        padding:10,\n        border:'1px solid black'\n    }\n    \n})\nexport default function BoxTodo(){\n    const classes = useStyle();\n\n    //--------useState--------//\n    const [task, setTask] = React.useState([]);\n    const [taskComplete, setTaskCompleted] = React.useState([]);\n    const [taskInput, setTaskinput] = React.useState('');\n    const [checked, setChecked] = React.useState(false);\n    const [changeTheme, setChangeTheme] = React.useState(false);\n    const [date, setDate]= React.useState(\"\");\n    const [complete, setComplete] = React.useState(true);\n    const [success, setSuccess] = React.useState(false);\n    const [theme, setTheme] = React.useState(classes.darkBox);\n    //--------Function-------//\n    const toggleTheme = ()=>{\n        setChangeTheme(pre => !pre);\n        if(theme === classes.lighterBox ){\n            return setTheme(pre => classes.darkBox)\n        }else{\n            return setTheme(pre => classes.lighterBox)\n        }\n    }\n    const addList = React.useCallback(\n        ()=>{\n            setTask([ {id:task.length +1, todo:taskInput,date: date ,isCompleted:false},...task]);\n            setTaskinput(\"\");\n            setDate('');\n            setSuccess((pre)=>true);\n        },\n        [task, taskInput, date],\n    )\n\n    const delTodo = (id)=>{\n        console.log('function',id);\n        taskComplete.map(value=>{\n            if(value.id == id){\n                taskComplete.splice(taskComplete.indexOf(value),1);\n                return setTaskCompleted([...taskComplete]);       \n            }\n        })\n        \n    }\n\n    const checkComplete = (id,todo, isCompleted, date) => {\n        if(isCompleted){\n            taskComplete.forEach(value => {\n                if(value.id == id){\n                    taskComplete.splice(taskComplete.indexOf(value),1);\n                    setTask([...task,{id: task.length+ 1, todo: todo, date:date  ,isCompleted:false }])\n                }\n            })\n        }else{\n            task.forEach(value=>{\n                if(value.id == id){\n                    task.splice(task.indexOf(value),1);\n                    setTaskCompleted([...taskComplete,{id:taskComplete.length+1, todo: todo,date: date, isCompleted:true}])\n                }\n            })\n        }\n    }\n    //----------Render--------//\n    return(\n        <Grid item>\n            \n            <Box position='relative' className={theme}>\n                <Typography color='secondary' align='center'  compornent='h1' variant='h5' children={<span><CardTravelIcon/> Todo List</span>}/>\n                <Paper className={classes.root}>\n                    <InputBase\n                        placeholder='Danh sách việc cần làm'                        \n                        style={{width:'90%'}}\n                        defaultValue=\"2017-05-24T10:30\"\n                        inputProps={{ 'aria-label': 'todo list' }}\n                        value={taskInput}                 \n                        onChange={(e) => setTaskinput(e.target.value)}      \n                    />\n                    <ButtonGroup type='time' className={classes.btn}>\n                        <IconButton color='secondary'  onClick={()=> setChecked(pre => !pre)}>\n                            <EventIcon />\n                        </IconButton>\n                        <IconButton color='secondary'   onClick={addList} disabled={!taskInput}>\n                            <SaveIcon/>\n                        </IconButton>                        \n                    </ButtonGroup>\n                    <Fade in={checked}>\n                        <Box \n                            position='absolute'\n                            top='100px'\n                            right='70px'\n                        >\n                            <form className={classes.container} noValidate>\n                                <TextField\n                                    id=\"datetime-local\"\n                                    label=\"Next appointment\"\n                                    type=\"datetime-local\"\n                                    value={date}                                    \n                                    onMouseLeave={() => setChecked(false)}                               \n                                    InputLabelProps={{\n                                        shrink: true,                                       \n                                    }}                                    \n                                    onChange={e => setDate(e.target.value)}\n                                />\n                            </form>\n                        </Box>\n                    </Fade>\n                </Paper>\n                <Box display='flex' justifyContent='end' alignI>\n                    <FormControlLabel\n                        control={<Checkbox color='primary' checked={changeTheme} onChange={()=> toggleTheme()} name=\"checkedA\" />}\n                        label=\"Nền tối\"\n                    />\n                   \n                </Box>\n                {/*-------success----------------*/}\n                <Snackbar open={success} autoHideDuration={2000} onClose={()=> setSuccess(false)}  >\n                    <Alert severity='success' anchorOrigin={{vertical:'center', horizontal:'left',}}>\n                        Đã thêm\n                    </Alert>\n                </Snackbar>\n                \n\n                <Box>\n                    {task.map(e =>( \n                        <Paper >\n                            <ListTodo asset={e} key={e.id} active={checkComplete}/>\n                        </Paper>\n                    ))}\n                </Box>\n\n                <Button\n                    startIcon={<DoneAllIcon/>}\n                    variant='outlined'\n                    size='small'\n                    onClick={()=> setComplete(pre => !pre)}\n                    color='primary'\n                >\n                    {`${taskComplete.length} hoàn thành`}\n                </Button>\n                <Fade in={complete}>\n                    <Box>\n                        {taskComplete.map(e => (\n                            <Paper >\n                                <ListComplete asset={e} key={e.id} active={checkComplete} delCompleted={delTodo}/>\n                            </Paper>\n                        ))}\n                    </Box>\n                </Fade>\n            </Box>\n        </Grid>\n    )\n}"]},"metadata":{},"sourceType":"module"}