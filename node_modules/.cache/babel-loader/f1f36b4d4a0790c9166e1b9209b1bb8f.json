{"ast":null,"code":"var _jsxFileName = \"E:\\\\Qu\\u1EA3n l\\xED \\u1EE9ng d\\u1EE5ng\\\\Project for CV\\\\apptodo\\\\src\\\\pages\\\\BoxTodo.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, Box, Typography, Paper, InputBase, IconButton, makeStyles, Divider, ButtonGroup, TextField, Fade } from \"@material-ui/core\";\nimport CardTravelIcon from '@material-ui/icons/CardTravel';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ListTodo from '../component/ListTodo';\nimport ListComplete from '../component/ListComplete';\nimport EventIcon from '@material-ui/icons/Event';\nimport React from 'react';\nimport EditTodo from '../component/EditTodo';\nimport { set } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles({\n  root: {\n    width: '350px',\n    padding: '5px 10px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    boxShadow: 'rgba(252, 66, 123,0.5) 0px 0px 0px 3px'\n  },\n  container: {\n    backgroundColor: '#f1f2f6'\n  }\n});\nexport default function BoxTodo() {\n  _s();\n\n  const classes = useStyle(); //--------useState--------//\n\n  const [task, setTask] = React.useState([]);\n  const [taskComplete, setTaskCompleted] = React.useState([]);\n  const [taskInput, setTaskinput] = React.useState('');\n  const [checked, setChecked] = React.useState(false);\n  const [date, setDate] = React.useState(\"\");\n  const [edit, setEdit] = React.useState(false); //--------Function-------//\n\n  const openEdit = () => {\n    setEdit(pre => !pre);\n  };\n\n  const addList = () => {\n    setTask([{\n      id: task.length + 1,\n      todo: taskInput,\n      date: date,\n      isCompleted: false\n    }, ...task]);\n    setTaskinput(\"\");\n    setDate('');\n  };\n\n  const delTodo = id => {\n    console.log('function', id);\n    taskComplete.map(value => {\n      if (value.id == id) {\n        taskComplete.splice(taskComplete.indexOf(value), 1);\n        return setTaskCompleted([...taskComplete]);\n      }\n    });\n  };\n\n  const checkComplete = (id, todo, isCompleted, date) => {\n    if (isCompleted) {\n      taskComplete.forEach(value => {\n        if (value.id == id) {\n          taskComplete.splice(taskComplete.indexOf(value), 1);\n          setTask([...task, {\n            id: task.length + 1,\n            todo: todo,\n            date: date,\n            isCompleted: false\n          }]);\n        }\n      });\n    } else {\n      task.forEach(value => {\n        if (value.id == id) {\n          task.splice(task.indexOf(value), 1);\n          setTaskCompleted([...taskComplete, {\n            id: taskComplete.length + 1,\n            todo: todo,\n            date: date,\n            isCompleted: true\n          }]);\n        }\n      });\n    }\n  }; //----------Render--------//\n\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      position: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"secondary\",\n        align: \"center\",\n        paragraph: \"true\",\n        compornent: \"h1\",\n        variant: \"h5\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(CardTravelIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 124\n          }, this), \" Todo List\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 118\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(InputBase, {\n          placeholder: \"Danh s\\xE1ch vi\\u1EC7c c\\u1EA7n l\\xE0m\",\n          style: {\n            width: '90%'\n          },\n          defaultValue: \"2017-05-24T10:30\",\n          inputProps: {\n            'aria-label': 'todo list'\n          },\n          value: taskInput,\n          onChange: e => setTaskinput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          type: \"time\",\n          className: classes.btn,\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"secondary\",\n            onClick: () => setChecked(pre => !pre),\n            children: /*#__PURE__*/_jsxDEV(EventIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"secondary\",\n            onClick: addList,\n            disabled: !taskInput,\n            children: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Fade, {\n          in: checked,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            position: \"absolute\",\n            top: \"100px\",\n            right: \"70px\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: classes.container,\n              noValidate: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"datetime-local\",\n                label: \"Next appointment\",\n                type: \"datetime-local\",\n                value: date,\n                onMouseLeave: () => setChecked(false),\n                InputLabelProps: {\n                  shrink: true\n                },\n                onChange: e => setDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"right\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [task.length, \" / \", task.length + taskComplete.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 53\n        }, this),\n        component: \"p\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Fade, {\n        in: edit,\n        children: /*#__PURE__*/_jsxDEV(EditTodo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: task.map(e => /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(ListTodo, {\n            asset: e,\n            active: checkComplete,\n            openEdit: setEdit\n          }, e.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        light: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: taskComplete.map(e => /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(ListComplete, {\n            asset: e,\n            active: checkComplete,\n            delCompleted: delTodo\n          }, e.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BoxTodo, \"+koPj6V5pecFEoNqcL1SWLrkJos=\", false, function () {\n  return [useStyle];\n});\n\n_c = BoxTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoxTodo\");","map":{"version":3,"sources":["E:/Quản lí ứng dụng/Project for CV/apptodo/src/pages/BoxTodo.js"],"names":["Grid","Box","Typography","Paper","InputBase","IconButton","makeStyles","Divider","ButtonGroup","TextField","Fade","CardTravelIcon","SaveIcon","ListTodo","ListComplete","EventIcon","React","EditTodo","set","useStyle","root","width","padding","display","alignItems","justifyContent","boxShadow","container","backgroundColor","BoxTodo","classes","task","setTask","useState","taskComplete","setTaskCompleted","taskInput","setTaskinput","checked","setChecked","date","setDate","edit","setEdit","openEdit","pre","addList","id","length","todo","isCompleted","delTodo","console","log","map","value","splice","indexOf","checkComplete","forEach","e","target","btn","shrink"],"mappings":"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","sourcesContent":["import { Grid, Box, Typography, Paper, InputBase, IconButton, makeStyles, Divider, ButtonGroup,TextField, Fade } from \"@material-ui/core\"\r\nimport CardTravelIcon from '@material-ui/icons/CardTravel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport ListTodo from '../component/ListTodo';\r\nimport ListComplete from '../component/ListComplete';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport React from 'react'\r\nimport EditTodo from '../component/EditTodo'\r\nimport { set } from \"date-fns\";\r\nconst useStyle= makeStyles({\r\n    root:{\r\n        width:'350px',\r\n        padding: '5px 10px',\r\n        display:'flex',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        boxShadow: 'rgba(252, 66, 123,0.5) 0px 0px 0px 3px'\r\n    },\r\n    container:{\r\n        backgroundColor: '#f1f2f6'\r\n    }\r\n    \r\n})\r\nexport default function BoxTodo(){\r\n    const classes = useStyle();\r\n\r\n    //--------useState--------//\r\n    const [task, setTask] = React.useState([]);\r\n    const [taskComplete, setTaskCompleted] = React.useState([]);\r\n    const [taskInput, setTaskinput] = React.useState('');\r\n    const [checked, setChecked] = React.useState(false);\r\n    const [date, setDate]= React.useState(\"\");\r\n    const [edit, setEdit]= React.useState(false);\r\n    //--------Function-------//\r\n    const openEdit =()=>{\r\n        setEdit((pre) => !pre)\r\n    }\r\n    const addList = ()=>{\r\n        setTask([ {id:task.length +1, todo:taskInput,date: date ,isCompleted:false},...task]);\r\n        setTaskinput(\"\");\r\n        setDate('');\r\n    }\r\n\r\n    const delTodo = (id)=>{\r\n        console.log('function',id);\r\n        taskComplete.map(value=>{\r\n            if(value.id == id){\r\n                taskComplete.splice(taskComplete.indexOf(value),1);\r\n                return setTaskCompleted([...taskComplete]);       \r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    const checkComplete = (id,todo, isCompleted, date) => {\r\n        if(isCompleted){\r\n            taskComplete.forEach(value => {\r\n                if(value.id == id){\r\n                    taskComplete.splice(taskComplete.indexOf(value),1);\r\n                    setTask([...task,{id: task.length+ 1, todo: todo, date:date  ,isCompleted:false }])\r\n                }\r\n            })\r\n        }else{\r\n            task.forEach(value=>{\r\n                if(value.id == id){\r\n                    task.splice(task.indexOf(value),1);\r\n                    setTaskCompleted([...taskComplete,{id:taskComplete.length+1, todo: todo,date: date, isCompleted:true}])\r\n                }\r\n            })\r\n        }\r\n    }\r\n    //----------Render--------//\r\n    return(\r\n        <Grid item >\r\n            <Box position='relative'>\r\n                <Typography color='secondary' align='center' paragraph='true' compornent='h1' variant='h5' children={<span><CardTravelIcon/> Todo List</span>}/>\r\n                <Paper className={classes.root}>\r\n                    <InputBase\r\n                        placeholder='Danh sách việc cần làm'                        \r\n                        style={{width:'90%'}}\r\n                        defaultValue=\"2017-05-24T10:30\"\r\n                        inputProps={{ 'aria-label': 'todo list' }}\r\n                        value={taskInput}                 \r\n                        onChange={(e) => setTaskinput(e.target.value)}      \r\n                    />\r\n                    <ButtonGroup type='time' className={classes.btn}>\r\n                        <IconButton color='secondary'  onClick={()=> setChecked(pre => !pre)}>\r\n                            <EventIcon />\r\n                        </IconButton>\r\n                        <IconButton color='secondary'   onClick={addList} disabled={!taskInput}>\r\n                            <SaveIcon/>\r\n                        </IconButton>                        \r\n                    </ButtonGroup>\r\n                    <Fade in={checked}>\r\n                        <Box \r\n                            position='absolute'\r\n                            top='100px'\r\n                            right='70px'\r\n                        >\r\n                            <form className={classes.container} noValidate>\r\n                                <TextField\r\n                                    id=\"datetime-local\"\r\n                                    label=\"Next appointment\"\r\n                                    type=\"datetime-local\"\r\n                                    value={date}                                    \r\n                                    onMouseLeave={() => setChecked(false)}                               \r\n                                    InputLabelProps={{\r\n                                        shrink: true,                                       \r\n                                    }}                                    \r\n                                    onChange={e => setDate(e.target.value)}\r\n                                />\r\n                            </form>\r\n                        </Box>\r\n                    </Fade>\r\n                </Paper>\r\n                <Typography align='right' children={<span>{task.length} / {task.length + taskComplete.length}</span>} component='p'/>\r\n                <Fade in={edit}>\r\n                    <EditTodo/>\r\n                </Fade>\r\n                <Box>\r\n                    {task.map(e =>( \r\n                        <Paper >\r\n                            <ListTodo asset={e} key={e.id} active={checkComplete} openEdit={setEdit}/>\r\n                        </Paper>\r\n                    ))}\r\n                </Box>\r\n                <Divider light/>\r\n                <Box>\r\n                    {taskComplete.map(e => (\r\n                        <Paper >\r\n                            <ListComplete asset={e} key={e.id} active={checkComplete}  delCompleted={delTodo}/>\r\n                        </Paper>\r\n                    ))}\r\n                </Box>\r\n            </Box>\r\n        </Grid>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}